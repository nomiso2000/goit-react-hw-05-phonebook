{"version":3,"sources":["Components/Notification/Notification.module.css","Components/App/App.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/App/header.js","Components/Filter/Filter.js","Components/Notification/Notification.js","Components/App/App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","items","onDelete","length","TransitionGroup","component","className","styles","list","map","name","id","number","CSSTransition","key","classNames","timeout","item","button","type","onClick","ContactForm","state","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onAddItem","clearState","this","onSubmit","placeholder","onChange","Component","Header","Filter","onSetFilter","loginInputId","uuidv4","Notification","notificationBox","App","contacts","filter","isVisible","filterContacts","contact","toLowerCase","includes","setFilter","addItem","every","toLocaleLowerCase","itemToAdd","deleteItem","persistedTasks","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filtratedContacts","container","in","appear","stylesNotification","unmountOnExit","onEntered","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0a25416.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationBox\":\"Notification_notificationBox__2UI1t\",\"enter\":\"Notification_enter__34jqK\",\"enterActive\":\"Notification_enterActive__3QnUZ\",\"exit\":\"Notification_exit__3PgYg\",\"exitActive\":\"Notification_exitActive__107oi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3b1yU\",\"appear\":\"App_appear__ouZ0L\",\"appearActive\":\"App_appearActive__2lkum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3KB1L\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ items, onDelete }) => {\r\n  return (\r\n    items.length > 0 && (\r\n      <TransitionGroup component=\"ul\" className={styles.list} >\r\n        {items.map(({ name, id, number }) => {\r\n          return (\r\n            <CSSTransition key={id}  classNames={styles} timeout={250}    > \r\n          <li  className={styles.item}>\r\n            <span>\r\n              {name} {number}\r\n            </span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n  \r\n            >\r\n              Delete\r\n            </button>\r\n          </li></CSSTransition>\r\n\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    )\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddItem: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name && this.state.number) {\r\n      this.props.onAddItem({ ...this.state });\r\n    }\r\n    this.clearState();\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter your name...\"\r\n          onChange={this.handleChange}\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"Enter your number...\"\r\n          onChange={this.handleChange}\r\n          value={number}\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h1>Phonebook</h1>;\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onSetFilter }) => {\r\n  const loginInputId = uuidv4();\r\n\r\n  return (\r\n    <div>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        onChange={onSetFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id={loginInputId}\r\n        placeholder=\"Enter a name to search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = () => {\r\n  return <div className={styles.notificationBox}>Contact already exist!</div>;\r\n};\r\n\r\nexport default Notification;","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Header from \"./header\";\nimport Filter from \"../Filter/Filter\";\nimport Notification from '../Notification/Notification'\nimport stylesNotification from '../Notification/Notification.module.css'\n\nimport styles from \"./App.module.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n\n    filter: \"\",\n    isVisible: false,\n  };\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"contacts\");\n    if (persistedTasks) {\n      this.setState({\n        contacts: JSON.parse(persistedTasks),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  setFilter = ({ target }) => {\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  addItem = (item) => {\n    if (\n      this.state.contacts.every(\n        (contact) =>\n          contact.name.toLocaleLowerCase() !== item.name.toLocaleLowerCase()\n      )\n    ) {\n      const itemToAdd = { ...item, id: uuidv4() };\n      this.setState((state) => ({\n        contacts: [...state.contacts, itemToAdd],\n      }));\n    } else {\n      this.setState({isVisible: true})\n    }\n  };\n\n  deleteItem = (id) => {\n    this.setState((state) => ({\n      contacts: state.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const filtratedContacts = this.filterContacts();\n    return (\n      <div className={styles.container}>\n        <CSSTransition\n          in={true}\n          classNames={styles}\n          timeout={500}\n          appear={true}\n        >\n          <Header />\n        </CSSTransition>\n        <CSSTransition in={this.state.isVisible} \n        timeout={1000} \n        classNames={stylesNotification}\n        unmountOnExit   \n        onEntered={() => this.setState({ isVisible: false })}>\n          <Notification/>\n        </CSSTransition>\n\n\n        <ContactForm onAddItem={this.addItem} />\n        {this.state.contacts.length > 1 &&      \n        <> \n          <h2>Contacts</h2>\n        <Filter onSetFilter={this.setFilter} /> \n        </>\n        }\n\n        <ContactList items={filtratedContacts} onDelete={this.deleteItem} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2jgOc\",\"list\":\"ContactList_list__3wOPU\",\"item\":\"ContactList_item__2n5Da\",\"enter\":\"ContactList_enter__2dnb4\",\"enterActive\":\"ContactList_enterActive__2NTl0\",\"exit\":\"ContactList_exit__2gV4j\",\"exitActive\":\"ContactList_exitActive__39PXq\"};"],"sourceRoot":""}